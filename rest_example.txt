#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

using namespace Pistache;

void helloHandler(const Rest::Request& request, Http::ResponseWriter response) {
    response.send(Http::Code::Ok, "Hello, World!");
}

void addHandler(const Rest::Request& request, Http::ResponseWriter response) {
    auto a = request.param(":a").as<int>();
    auto b = request.param(":b").as<int>();
    auto result = a + b;
    response.send(Http::Code::Ok, std::to_string(result));
}

int main() {
    Http::Endpoint server(Address(Ipv4::any(), Port(9080)));
    auto opts = Http::Endpoint::options().threads(1);
    server.init(opts);

    Rest::Router router;

    Rest::Routes::Get(router, "/hello", Rest::Routes::bind(&helloHandler));
    Rest::Routes::Get(router, "/add/:a/:b", Rest::Routes::bind(&addHandler));

    server.setHandler(router.handler());
    server.serve();

    server.shutdown();
    return 0;
}
